#
# Default properties for nrtmosaic.
# Override by putting a 'nrtmosaic.properties' in the class path with the values that should different.
#

# URL or file with a list of URLs (or file system paths) to source images used for building Pyramids.
# The images should be smaller than or equal to pyramidXTiles*pyramidEdge x pyramidYTiles*pyramidEdge.
# This currently means 256x384 pixels as the only supported aspect ration is 2:3.
pyramid.source=nrtmosaic/sources.dat
# Where Pyramid data is stored. This is automatically re-generated if deleted
pyramid.cache=nrtmosaic/cache
# The amount of pyramid data to keep explicitly cached on the heap. Basic heap requirement for running nrtmosaic
# is about 300 bytes/pyramid. Lower cache level means lower heap usage, but more IO.
# Values are 0-8, where the cache overhead is
# 0: 22 = 22 bytes/pyramid
# 1: 22 + 1*1*6 = 28 bytes/pyramid
# 2: 22 + 1*1*6 + 2*2*6 = 52 bytes/pyramid
# 3: 22 + 1*1*6 + 2*2*6 + 4*4*6 = 148 bytes/pyramid
# 4: 22 + 1*1*6 + 2*2*6 + 4*4*6 + 8*8*6 = 532 bytes/pyramid
# 5: 22 + 1*1*6 + 2*2*6 + 4*4*6 + 8*8*6 + 16*16*6 = 2068 bytes/pyramid
# 6: 22 + 1*1*6 + 2*2*6 + 4*4*6 + 8*8*6 + 16*16*6 + 32*32*6 = 8212 bytes/pyramid
# 7: 22 + 1*1*6 + 2*2*6 + 4*4*6 + 8*8*6 + 16*16*6 + 32*32*6 + 64*64*6 = 32788 bytes/pyramid
# 8: 22 + 1*1*6 + 2*2*6 + 4*4*6 + 8*8*6 + 16*16*6 + 32*32*6 + 64*64*6 + 128*128*6 = 131092 bytes/pyramid
# It is very much recommended to keep the cache at level 2+.
# Backed by SSD, level 2/3 works fine for 1M pyramids.
# Spinning drives should have level 4/5 for 1M pyramids.
pyramid.cache.level=2
# If true, the Pyramid cache is always re-build upon startup.
corpuscreator.overwrite=false

# When resolving a pixel to a Pyramid, the available Pyramids are bucketed for larger diversity.
# Larger bucket size means more diversity but also poorer color-to-image mapping for the mosaic.
pyramid.bucketsize=16

prime.firstbasiclevel=8
prime.lastbasiclevel=13
# Each level in the pyramid scales width and height of internal blocks by 2, mimicking the DeepZoom protocol.
# In each level there are fractionWidth*fractionHeight blocks. As only 2:3 are implemented, this means 6 blocks.
# Levels are 1x1, 2x2, 4x4, 8x8, 16x16, 32x32, 64x64 and 128x128.
# The topmost level size times the number of blocks should match the max amount of pixels from the sources.
# With maxlevel=8 and 2:3 aspect ratio, that is 128x128 * 2 * 3 = 256x384 pixels.
# Bottom line: Don't change this number!
pyramid.maxlevel=8
# Tiles at level >= turtle level are always turtle.png. Used to mark the end of the zoom.
prime.turtlelevel=42

# When a DZI is requested, the width and height of the full image is multiplied by 2^dzifactor.
# This is used by OpenSeadragon to determine the maximum zoom level.
prime.dzifactor=29

# Only accept requests for images specified in the source.
prime.onlyallowknown=true

# How to fill the empty parts of the sub-images, when the source images does not fit the pyramid fully:
# fixed:   Use tile.fill.grey for all fills
#          This gives an infinite canvas with evenly spaced images, but poor mapping of pixels.
# average: Use the average for the base tile.
#          Each image-area appears distinct, with better mapping than average.
# dynamic: Select a fill that optimized the average grey towards the wanted grey
#          Tendency towards chess board look, but best possible mapping.
tile.fill.style=dynamic

# When calculating a dynamic grey, do not deviate further that this amount of grey intensities from the average grey.
# High values (> 64): Chess board pattern.
# Low values  (< 16): Low contrast in some image areas, if the average greys for the images are not evenly distributed.
tile.fill.dynamic.maxdistance=64

# Used when no other grey can be derived or when tile.fill-style=fixed
tile.fill.grey=238

# Leftover from debugging. To be removed
tile.debuggrey=153

# The size of the tiles used. Untested for everything else but 256
tile.edge=256

# Each Tile (collection of Pyramids) takes up approximately 256KB of heap
tile.cachesize=100

# nrtmosaic relies on a backing DeepZoom-compatible image server, such as http://iipimage.sourceforge.net/
imageserver=http://localhost/iipsrv/iipsrv.fcgi?
#imageserver=http://deneb/iipsrv/
#imageserver=http://ekot.dk/cgi-bin/iipsrv.fcgi

# When a request is to be sent to the image server, the raw UUID (128 bit in hex) will be matched against this regexp.
# Sample UUID: 9c05d958b61647c19e4f63ec2dd9429e
# Sample regexp: (.)(.)(.)(.)(.{4})(.{4})(.{4})(.{4})(.{12})
imageserver.path.regexp=(.)(.)(.)(.)(.{4})(.{4})(.{4})(.{4})(.{12})
# The result of the regexp match will be written with this replacement.
# Sample pattern: /avis-show/symlinks/$1/$2/$3/$4/$1$2$3$4$5-$6-$7-$8-$9.jp2
# Sample output: /avis-show/symlinks/9/c/0/5/9c05d958-b616-47c1-9e4f-63ec2dd9429e.jp2
imageserver.path.replacement=/avis-show/symlinks/$1/$2/$3/$4/$1$2$3$4$5-$6-$7-$8-$9.jp2

#imageserver.path.regexp=(.{8})(.{4})(.{4})(.{4})(.{12})
#/mnt/active/www/nrtmosaic/tiff/2f5a3fa8-89f7-4e4e-abbc-085eb8dab2db.tif
#imageserver.path.replacement=/mnt/active/www/nrtmosaic/tiff/$1-$2-$3-$4-$5.tif

